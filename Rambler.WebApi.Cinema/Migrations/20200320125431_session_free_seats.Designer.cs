// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rambler.WebApi.Cinema.Models;

namespace Rambler.WebApi.Cinema.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20200320125431_session_free_seats")]
    partial class session_free_seats
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("SessionTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SessionTypeId");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.OrderSession", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "SessionId");

                    b.HasIndex("SessionId");

                    b.ToTable("OrderSession");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("FilmId")
                        .HasColumnType("integer");

                    b.Property<int>("FreeSeats")
                        .HasColumnType("integer");

                    b.Property<int?>("HallId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("HallId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.SessionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SessionTypes");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.Hall", b =>
                {
                    b.HasOne("Rambler.WebApi.Cinema.Models.SessionType", "SessionType")
                        .WithMany("Halls")
                        .HasForeignKey("SessionTypeId");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.Order", b =>
                {
                    b.HasOne("Rambler.WebApi.Cinema.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId");

                    b.HasOne("Rambler.WebApi.Cinema.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.OrderSession", b =>
                {
                    b.HasOne("Rambler.WebApi.Cinema.Models.Order", "Order")
                        .WithMany("OrderSessions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rambler.WebApi.Cinema.Models.Session", "Session")
                        .WithMany("OrderSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rambler.WebApi.Cinema.Models.Session", b =>
                {
                    b.HasOne("Rambler.WebApi.Cinema.Models.Film", "Film")
                        .WithMany("Sessions")
                        .HasForeignKey("FilmId");

                    b.HasOne("Rambler.WebApi.Cinema.Models.Hall", "Hall")
                        .WithMany("Sessions")
                        .HasForeignKey("HallId");
                });
#pragma warning restore 612, 618
        }
    }
}
